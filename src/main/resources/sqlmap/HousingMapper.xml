<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.kgc.dao.HousingMapper" >
  <resultMap id="BaseResultMap" type="com.kgc.pojo.Housing" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="community_id" property="communityId" jdbcType="INTEGER" />
    <result column="buildings_id" property="buildingsId" jdbcType="INTEGER" />
    <result column="expect_rent" property="expectRent" jdbcType="DECIMAL" />
    <result column="rent_type" property="rentType" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="create_by" property="createBy" jdbcType="INTEGER" />
    <result column="modify_date" property="modifyDate" jdbcType="TIMESTAMP" />
    <result column="modify_by" property="modifyBy" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, community_id, buildings_id, expect_rent, rent_type, name, phone, state, remark, 
    create_date, create_by, modify_date, modify_by
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.kgc.pojo.HousingCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from beike_housing
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from beike_housing
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from beike_housing
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.kgc.pojo.HousingCriteria" >
    delete from beike_housing
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.kgc.pojo.Housing" >
    insert into beike_housing (id, community_id, buildings_id, 
      expect_rent, rent_type, name, 
      phone, state, remark, 
      create_date, create_by, modify_date, 
      modify_by)
    values (#{id,jdbcType=INTEGER}, #{communityId,jdbcType=INTEGER}, #{buildingsId,jdbcType=INTEGER}, 
      #{expectRent,jdbcType=DECIMAL}, #{rentType,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, 
      #{createDate,jdbcType=TIMESTAMP}, #{createBy,jdbcType=INTEGER}, #{modifyDate,jdbcType=TIMESTAMP}, 
      #{modifyBy,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.kgc.pojo.Housing" >
    insert into beike_housing
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="communityId != null" >
        community_id,
      </if>
      <if test="buildingsId != null" >
        buildings_id,
      </if>
      <if test="expectRent != null" >
        expect_rent,
      </if>
      <if test="rentType != null" >
        rent_type,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="modifyDate != null" >
        modify_date,
      </if>
      <if test="modifyBy != null" >
        modify_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="communityId != null" >
        #{communityId,jdbcType=INTEGER},
      </if>
      <if test="buildingsId != null" >
        #{buildingsId,jdbcType=INTEGER},
      </if>
      <if test="expectRent != null" >
        #{expectRent,jdbcType=DECIMAL},
      </if>
      <if test="rentType != null" >
        #{rentType,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=INTEGER},
      </if>
      <if test="modifyDate != null" >
        #{modifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyBy != null" >
        #{modifyBy,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.kgc.pojo.HousingCriteria" resultType="java.lang.Integer" >
    select count(*) from beike_housing
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update beike_housing
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.communityId != null" >
        community_id = #{record.communityId,jdbcType=INTEGER},
      </if>
      <if test="record.buildingsId != null" >
        buildings_id = #{record.buildingsId,jdbcType=INTEGER},
      </if>
      <if test="record.expectRent != null" >
        expect_rent = #{record.expectRent,jdbcType=DECIMAL},
      </if>
      <if test="record.rentType != null" >
        rent_type = #{record.rentType,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null" >
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createBy != null" >
        create_by = #{record.createBy,jdbcType=INTEGER},
      </if>
      <if test="record.modifyDate != null" >
        modify_date = #{record.modifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyBy != null" >
        modify_by = #{record.modifyBy,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update beike_housing
    set id = #{record.id,jdbcType=INTEGER},
      community_id = #{record.communityId,jdbcType=INTEGER},
      buildings_id = #{record.buildingsId,jdbcType=INTEGER},
      expect_rent = #{record.expectRent,jdbcType=DECIMAL},
      rent_type = #{record.rentType,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      create_by = #{record.createBy,jdbcType=INTEGER},
      modify_date = #{record.modifyDate,jdbcType=TIMESTAMP},
      modify_by = #{record.modifyBy,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.kgc.pojo.Housing" >
    update beike_housing
    <set >
      <if test="communityId != null" >
        community_id = #{communityId,jdbcType=INTEGER},
      </if>
      <if test="buildingsId != null" >
        buildings_id = #{buildingsId,jdbcType=INTEGER},
      </if>
      <if test="expectRent != null" >
        expect_rent = #{expectRent,jdbcType=DECIMAL},
      </if>
      <if test="rentType != null" >
        rent_type = #{rentType,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=INTEGER},
      </if>
      <if test="modifyDate != null" >
        modify_date = #{modifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyBy != null" >
        modify_by = #{modifyBy,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kgc.pojo.Housing" >
    update beike_housing
    set community_id = #{communityId,jdbcType=INTEGER},
      buildings_id = #{buildingsId,jdbcType=INTEGER},
      expect_rent = #{expectRent,jdbcType=DECIMAL},
      rent_type = #{rentType,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=INTEGER},
      modify_date = #{modifyDate,jdbcType=TIMESTAMP},
      modify_by = #{modifyBy,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>