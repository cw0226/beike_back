<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.kgc.dao.HousingMapper" >
  <resultMap id="BaseResultMap" type="com.kgc.pojo.Housing" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="community_id" property="communityId" jdbcType="INTEGER" />
    <result column="block" property="block" jdbcType="VARCHAR" />
    <result column="uint" property="uint" jdbcType="VARCHAR" />
    <result column="room_number" property="roomNumber" jdbcType="VARCHAR" />
    <result column="expect_rent" property="expectRent" jdbcType="DECIMAL" />
    <result column="rent_type" property="rentType" jdbcType="TINYINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="check_state" property="checkState" jdbcType="TINYINT" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_user_id" property="createUserId" jdbcType="INTEGER" />
    <result column="check_time" property="checkTime" jdbcType="TIMESTAMP" />
    <result column="check_user_id" property="checkUserId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, community_id, block, uint, room_number, expect_rent, rent_type, name, phone, 
    check_state, remark, create_time, create_user_id, check_time, check_user_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.kgc.pojo.HousingCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from beike_housing
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from beike_housing
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from beike_housing
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.kgc.pojo.HousingCriteria" >
    delete from beike_housing
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.kgc.pojo.Housing" >
    insert into beike_housing (id, community_id, block, 
      uint, room_number, expect_rent, 
      rent_type, name, phone, 
      check_state, remark, create_time, 
      create_user_id, check_time, check_user_id
      )
    values (#{id,jdbcType=INTEGER}, #{communityId,jdbcType=INTEGER}, #{block,jdbcType=VARCHAR}, 
      #{uint,jdbcType=VARCHAR}, #{roomNumber,jdbcType=VARCHAR}, #{expectRent,jdbcType=DECIMAL}, 
      #{rentType,jdbcType=TINYINT}, #{name,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{checkState,jdbcType=TINYINT}, #{remark,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createUserId,jdbcType=INTEGER}, #{checkTime,jdbcType=TIMESTAMP}, #{checkUserId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.kgc.pojo.Housing" >
    insert into beike_housing
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="communityId != null" >
        community_id,
      </if>
      <if test="block != null" >
        block,
      </if>
      <if test="uint != null" >
        uint,
      </if>
      <if test="roomNumber != null" >
        room_number,
      </if>
      <if test="expectRent != null" >
        expect_rent,
      </if>
      <if test="rentType != null" >
        rent_type,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="checkState != null" >
        check_state,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createUserId != null" >
        create_user_id,
      </if>
      <if test="checkTime != null" >
        check_time,
      </if>
      <if test="checkUserId != null" >
        check_user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="communityId != null" >
        #{communityId,jdbcType=INTEGER},
      </if>
      <if test="block != null" >
        #{block,jdbcType=VARCHAR},
      </if>
      <if test="uint != null" >
        #{uint,jdbcType=VARCHAR},
      </if>
      <if test="roomNumber != null" >
        #{roomNumber,jdbcType=VARCHAR},
      </if>
      <if test="expectRent != null" >
        #{expectRent,jdbcType=DECIMAL},
      </if>
      <if test="rentType != null" >
        #{rentType,jdbcType=TINYINT},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="checkState != null" >
        #{checkState,jdbcType=TINYINT},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="checkTime != null" >
        #{checkTime,jdbcType=TIMESTAMP},
      </if>
      <if test="checkUserId != null" >
        #{checkUserId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.kgc.pojo.HousingCriteria" resultType="java.lang.Integer" >
    select count(*) from beike_housing
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update beike_housing
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.communityId != null" >
        community_id = #{record.communityId,jdbcType=INTEGER},
      </if>
      <if test="record.block != null" >
        block = #{record.block,jdbcType=VARCHAR},
      </if>
      <if test="record.uint != null" >
        uint = #{record.uint,jdbcType=VARCHAR},
      </if>
      <if test="record.roomNumber != null" >
        room_number = #{record.roomNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.expectRent != null" >
        expect_rent = #{record.expectRent,jdbcType=DECIMAL},
      </if>
      <if test="record.rentType != null" >
        rent_type = #{record.rentType,jdbcType=TINYINT},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.checkState != null" >
        check_state = #{record.checkState,jdbcType=TINYINT},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUserId != null" >
        create_user_id = #{record.createUserId,jdbcType=INTEGER},
      </if>
      <if test="record.checkTime != null" >
        check_time = #{record.checkTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.checkUserId != null" >
        check_user_id = #{record.checkUserId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update beike_housing
    set id = #{record.id,jdbcType=INTEGER},
      community_id = #{record.communityId,jdbcType=INTEGER},
      block = #{record.block,jdbcType=VARCHAR},
      uint = #{record.uint,jdbcType=VARCHAR},
      room_number = #{record.roomNumber,jdbcType=VARCHAR},
      expect_rent = #{record.expectRent,jdbcType=DECIMAL},
      rent_type = #{record.rentType,jdbcType=TINYINT},
      name = #{record.name,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      check_state = #{record.checkState,jdbcType=TINYINT},
      remark = #{record.remark,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_user_id = #{record.createUserId,jdbcType=INTEGER},
      check_time = #{record.checkTime,jdbcType=TIMESTAMP},
      check_user_id = #{record.checkUserId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.kgc.pojo.Housing" >
    update beike_housing
    <set >
      <if test="communityId != null" >
        community_id = #{communityId,jdbcType=INTEGER},
      </if>
      <if test="block != null" >
        block = #{block,jdbcType=VARCHAR},
      </if>
      <if test="uint != null" >
        uint = #{uint,jdbcType=VARCHAR},
      </if>
      <if test="roomNumber != null" >
        room_number = #{roomNumber,jdbcType=VARCHAR},
      </if>
      <if test="expectRent != null" >
        expect_rent = #{expectRent,jdbcType=DECIMAL},
      </if>
      <if test="rentType != null" >
        rent_type = #{rentType,jdbcType=TINYINT},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="checkState != null" >
        check_state = #{checkState,jdbcType=TINYINT},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="checkTime != null" >
        check_time = #{checkTime,jdbcType=TIMESTAMP},
      </if>
      <if test="checkUserId != null" >
        check_user_id = #{checkUserId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kgc.pojo.Housing" >
    update beike_housing
    set community_id = #{communityId,jdbcType=INTEGER},
      block = #{block,jdbcType=VARCHAR},
      uint = #{uint,jdbcType=VARCHAR},
      room_number = #{roomNumber,jdbcType=VARCHAR},
      expect_rent = #{expectRent,jdbcType=DECIMAL},
      rent_type = #{rentType,jdbcType=TINYINT},
      name = #{name,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      check_state = #{checkState,jdbcType=TINYINT},
      remark = #{remark,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      check_time = #{checkTime,jdbcType=TIMESTAMP},
      check_user_id = #{checkUserId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>